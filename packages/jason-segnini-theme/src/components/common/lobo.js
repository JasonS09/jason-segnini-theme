import { connect, styled, css } from "frontity"
import { glowForPolygon, draw } from "../../styles/keyframes"
import { useRef, useEffect, useState } from "react"

const Lobo = ({state, forceError, ...rest}) => {
    const data = state.source.get(state.router.link)
    const [length, setLength] = useState(0)
    const ref = useRef(null)
    useEffect(() => setLength(ref.current.getTotalLength()), [])

    return (
        <svg width="143" height="173" {...rest}>
            <Path 
                color={!forceError ? state.theme.color : '#d75a5a'}
                d={(!forceError && !data.isError) ? 'm 127.7888,66.453374 c -0.54431,-1.08862 4.21838,-36.19644 4.21838,-36.19644 l -1.36077,-7.48423 -17.14569,19.45899 -4.35446,12.51907 1.08863,11.02222 m -95.02368,0.68039 c 0.54431,-1.08862 -4.21838,-36.19644 -4.21838,-36.19644 l 1.36076,-7.48423 17.14569,19.45899 4.35446,12.51907 -1.08862,11.02222 m 43.8346,42.302866 -5.09971,2.40553 M 91.37304,35.893704 71.98112,29.655854 h -0.96221 m 61.38889,-18.089519 3.46395,14.433129 -9.62208,48.68776 -22.51568,-12.8936 -21.55346,-20.39882 50.22727,-29.828469 -26.36451,29.443579 -2.3093,20.78371 m 22.51568,12.8936 8.85232,26.172066 -34.79893,22.21052 m -17.14745,31.69744 28.57612,-52.79783 -3.81015,-28.529436 m -48.07717,81.327266 11.54319,6.64443 11.76801,-6.64443 8.57284,-32.25021 15.98902,-12.99535 M 68.2285,147.4302 h 6.54302 l 2.88663,2.88663 -6.06192,7.60143 -6.25436,-7.60143 2.88663,-2.88663 m -32.94596,-37.77242 15.98903,12.85926 8.57284,32.25021 -17.69176,-31.9696 m 61.58134,-61.004026 -26.29361,34.732728 32.79451,-30.753368 -2.31331,7.667 M 66.4003,108.07585 71.59623,143.87002 76.59972,108.07585 94.4968,98.742432 107.92158,73.439984 71.50001,110.48138 M 35.07843,73.439984 71.50001,110.48138 48.50322,98.742432 35.07843,73.439984 M 16.75034,74.687224 7.8980192,100.85929 42.15265,122.79765 31.26828,101.96942 35.07843,73.439984 32.76512,65.772984 65.55964,96.526352 39.26602,61.793624 M 10.59221,11.566335 7.1282492,25.999464 16.75034,74.687224 39.26602,61.793624 m 31.75289,-32.13777 -19.05174,5.9657 -41.37496,-24.055219 26.36451,29.443579 2.3093,20.78371 21.55347,-20.39882 -8.85232,-5.77325' : 'm 97.514711,91.564368 -20.00335,12.519012 m 17.70515,2.05065 -11.744445,-15.366129 m 20.626974,46.017989 3.85144,9.93713 m -11.8859,-15.56602 8.03446,5.62889 m -14.535737,6.54888 7.814178,2.52768 2.752909,6.78045 c 3.97459,11.96906 17.07704,2.29422 13.34123,-5.80291 l -0.41224,-10.49888 -2.73523,-5.28363 -10.021,-7.98782 m -33.902863,-14.99389 5.003503,35.79401 5.195943,-35.79401 M 44.603721,91.083264 64.607077,103.60228 M 46.901916,105.65294 59.319911,90.719784 M 127.78896,66.453451 c -0.5443,-1.088611 4.21841,-36.196294 4.21841,-36.196294 l -1.36078,-7.484188 -17.14574,19.458903 -4.35448,12.519015 1.08864,11.022179 M 15.21103,66.453451 C 15.755334,65.36484 10.992633,30.257157 10.992633,30.257157 l 1.36077,-7.484188 17.145739,19.458903 4.354473,12.519015 -1.088618,11.022179 M 91.3731,35.893911 71.981113,29.656086 h -0.962214 m 61.389081,-18.089443 3.46397,14.433064 -9.62212,48.687562 -22.51574,-12.893545 -21.553531,-20.398738 50.227421,-29.828343 -26.36459,29.443455 -2.3093,20.783626 m 22.51574,12.893545 8.85236,26.171961 -34.79904,22.21043 M 83.155636,154.76697 111.73185,101.96936 107.9217,73.44004 m -48.077324,81.32693 11.543216,6.6444 11.768044,-6.6444 8.57287,-32.25009 15.989074,-12.99528 m -39.48909,37.90835 h 6.543041 l 2.886632,2.88661 -6.061932,7.6014 -6.254382,-7.6014 2.886641,-2.88661 m -32.946067,-37.77227 15.989083,12.8592 8.57287,32.25009 L 42.152547,122.7975 M 103.73409,61.793724 77.440393,96.526315 110.23501,65.773066 107.9217,73.44004 M 16.750161,74.687269 7.8978197,100.85923 42.152547,122.7975 31.26815,101.96936 35.078309,73.44004 32.764997,65.773066 65.559619,96.526315 39.265914,61.793724 M 10.592012,11.566643 7.1280466,25.999707 16.750161,74.687269 39.265914,61.793724 M 71.018899,29.656086 51.967111,35.621752 10.592012,11.566643 36.956604,41.010098 39.265914,61.793724 60.819462,41.394986 51.967111,35.621752'}
                length={length}
                ref={ref}
            />     
        </svg>
    )
}

export default connect(Lobo)

const Path = styled.path`
    ${props => css`
        stroke: ${props.color};
        stroke-dasharray: ${props.length};
        stroke-dashoffset: ${props.length};
        animation: ${draw} 10s ease-out forwards,
            ${glowForPolygon(
                props.color, 3, 7, 1, 1
            )} 3s ease-out alternate infinite;
    `}
`